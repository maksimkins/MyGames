@using MyGames.Core.Game.Models;

@model IEnumerable<Game>;
@{
    ViewData["Title"] = "Delete";
}

<script>
    function DeleteGame(gameJson) {

    let game = JSON.parse(gameJson);

    fetch(`/api/Game/${game.Id}`, {
      method: 'DELETE',
      headers: {
        'Content-type': 'application/json; charset=UTF-8'
      }
    }).then((response) => {
            if (!response.ok)
                throw new Error(response.statusText);

            let card = document.getElementById(`game-${game.Id}`);
            let parent = card.parentNode;
            if (parent) 
            {
              parent.removeChild(card);
              

              if(parent.children.length === 0)
              {
                let warning = document.createElement("div");
                warning.classList.add("alert");
                warning.classList.add("alert-danger");
                warning.setAttribute('role',"alert");
                let warningText = document.createTextNode("Sorry! There is no games(");
                warning.appendChild(warningText)

                parent.appendChild(warning)
              }
              
            }

        }).catch((err) => {
          console.log(err.message);
        });
  }
</script>

<div class="delete-container">
   <div class="delete d-flex flex-wrap justify-content-between">
    <div id="comments-wrapper" class="comments d-flex flex-wrap justify-content-between mb-3"></div>
        @if(Model is null || !Model.Any()){
            <div class="alert alert-danger" role="alert">
                Sorry! There is no games(
            </div>
        }
        else {
            @foreach(var game in Model) {
                <div id="game-@game.Id" class="card" style="width: 18rem;">
                  <div class="card-body">
                    <h5 class="card-title">@game.Name</h5>
                    <button type="button" onclick="DeleteGame(`@JsonSerializer.Serialize(game)`)" class="btn btn-danger">Delete game</button>
                  </div>
                </div>
            }
        }
        </div>
   </div>
</div>